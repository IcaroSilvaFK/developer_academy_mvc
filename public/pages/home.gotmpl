<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/assets/styles/pages/home.css">
  {{ template "templates/head.tmpl" }}
  <title>DEVELOPER ACADEMY | HOME</title>
</head>

<body>
  {{template "templates/header.tmpl" .}}
  <main x-data="container" class="container__main">
    <section class="language__section">
      <h2>As três linguagens de programação mais requisitadas no mercado.</h2>

      <ul>
        <li class="language__section__card">
          <img
            src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Rust_programming_language_black_logo.svg/242px-Rust_programming_language_black_logo.svg.png"
            alt="rust" />
          <div>
            <span>
              Rust
            </span>
            <p>
              <b>+ 900</b> vagas
            </p>
          </div>

        </li>
        <li class="language__section__card">
          <img
            src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Go_Logo_Blue.svg/429px-Go_Logo_Blue.svg.png"
            alt="Go language" />
          <div>
            <span>
              Go language
            </span>
            <p>
              <b>+ 900</b> vagas
            </p>
          </div>
        </li>
        <li class="language__section__card">
          <img
            src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Unofficial_JavaScript_logo_2.svg/520px-Unofficial_JavaScript_logo_2.svg.png"
            alt="JavaScript" />
          <div>
            <span>
              JavaScript
            </span>
            <p>
              <b>+ 900</b> vagas
            </p>
          </div>
        </li>
      </ul>
    </section>
    <header class="main__header">
      <h2>Desafios</h2>
      <div>
        <div class="header__input">
          <i class="ph ph-magnifying-glass"></i>
          <input placeholder="Buscar desafios..." x-on:change.debounce="onSearch" />
        </div>
        <a href="/new_challenge" class="button__action">
          Novo desafio <i class="ph ph-plus"></i>
        </a>
      </div>
    </header>
    <section class="section__categories">
      <caption>Categorias Favoritas</caption>
      <div>

        <ul>
          <template x-for="c in categories">
            <li class="pill">
              <button x-text="c.title"></button>
            </li>
          </template>
        </ul>
        <button class="button__action" @click="handleOpenModal">
          Favoritar
        </button>
      </div>
    </section>
    <div class="container__empty_challenges" x-show="filteredChallenges.length <= 0">
      <span>
        Parece que ainda não temos desafios cadastrados. <a href="/new_challenge">Clique aqui</a> para criar um novo.
      </span>
      <i class="ph ph-code"></i>
    </div>
    <div class="container__slider_sub">
      <ul class="main__list_container swiper">
        <div class="swiper-wrapper">
          <template x-for="challenge in filteredChallenges">
            <div class="swiper-slide">
              <div class="list_container__content">
                <h3 x-text="challenge.title"></h3>
                <p x-text="challenge.description"></p>
                <ul class="list_container__categories">
                  <template x-for="cat in maskList(challenge.categories)">
                    <li x-text="cat"></li>
                  </template>
                </ul>
                <div class="list_container__rating">
                  <span>Dificuldade</span>
                  <ul class="list_container__rate">
                    <template x-for="d in [1,2,3,4,5]">
                      <svg fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"
                        :class="{'rate__star--active': d <= challenge.rating}">
                        <path
                          d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z">
                        </path>
                      </svg>
                    </template>
                  </ul>
                </div>
                <time x-text="'Criado em ' + formatDate(new Date(challenge.created_at))"></time>
                <footer>
                  <a :href="'/challenge/'+challenge.id">
                    <i class="ph ph-eye"></i>
                    <span>
                      visualizar
                    </span>
                  </a>
                </footer>
              </div>

            </div>
          </template>

        </div>

      </ul>
      <div class="swiper-pagination"></div>
      <button class="button__slide prev-swiper-slide">
        <i class="ph ph-caret-double-left"></i>
      </button>
      <button class="button__slide next-swiper-slide">
        <i class="ph ph-caret-double-right"></i>
      </button>
    </div>
    <div class="modal__categories" x-show="modalFavoriteCategoryIsOpen" x-transition
      @click="handleToggleVisibleModalCategory" x-cloak>
      <div @click.stop>
        <header>
          <h3>Favoritar nova categoria</h3>
          <button @click="handleToggleVisibleModalCategory">
            <i class="ph ph-x"></i>
          </button>
        </header>
        <ul>
          <template x-for="c in categories">
            <li :node-key="c.id" class="pill">
              <button x-text="c.title" @click="appendOrRemoveFavoriteCategory(c.id)"></button>
            </li>
          </template>
        </ul>
        <footer>
          <button>Cancelar</button>
          <button :disabled="!myFavoriteCategories.length">Salvar</button>
        </footer>
      </div>

    </div>
  </main>


  {{ template "templates/footer.tmpl" }}

  <script>
    document.addEventListener("alpine:init", () => {
      Alpine.data("container", () => ({
        challenges: {{.challenges }},
      categories: {{ .categories }},
      filter: "",
      mySwiper: {},
      myFavoriteCategories: [],
      modalFavoriteCategoryIsOpen: false,
      filteredChallenges: {{.challenges }},
      onSearch(ev) {
      const value = ev.target.value
          
          if(!this.challenges) return

    if (!value.trim()) {
      this.filteredChallenges = this.challenges
      return
    }

    this.filteredChallenges = this.challenges.filter(challenge =>
      this.toUpper(challenge.title).includes(this.toUpper(value)) ||
      this.toUpper(challenge.description).includes(this.toUpper(value)))
        },
    init() {
      this.filteredChallenges = this.challenges
      this.initSwiper()
      this.mySwiper.init()
      this.mySwiper.update()
    },
    toUpper(str) {
      return str.toUpperCase()
    },
    initSwiper() {
      this.mySwiper = new Swiper(".swiper", {
        init: false,
        loop: true,
        // effect: "fade",
        grabCursor: true,
        centeredSlides: false,
        slidesPerView: 3,
        watchSlidesProgress: true,
        preloadImages: false,
        pagination: {
          el: ".swiper-pagination",
          clickable: true
        },
        navigation: {
          nextEl: ".next-swiper-slide",
          prevEl: ".prev-swiper-slide"
        },
        autoplay: {
          delay: 4000,
          disableOnInteraction: false
        }
      })
    },
    handleToggleVisibleModalCategory(){
      this.modalFavoriteCategoryIsOpen = !this.modalFavoriteCategoryIsOpen
    },
        async handleOpenModal() {
      try {
        const categories = await(await fetch(
          "/api/v1/challenges/categories"
        )).json()
        console.log(categories)
        this.handleToggleVisibleModalCategory()
      } catch (err) {
        console.error(err)
      }
    },
    maskList(list) {

      if (list.length <= 4) {
        return list
      }
      const ordenedFromBiggest = list.sort((a, b) => b - a)

      const allLength = ordenedFromBiggest.length
      const halfLength = Math.ceil(allLength / 2)

      const result = []

      for (let i = 0; i < halfLength; i++) {
        result.push(ordenedFromBiggest[i])
      }

      const lastItem = allLength - halfLength

      result.push(`+${lastItem}`)

      return result
    },
    appendOrRemoveFavoriteCategory(catId) {

      if (this.myFavoriteCategories.includes(catId)) {
        this.myFavoriteCategories = this.myFavoriteCategories.filter(
          id => id !== catId
        )
        this.removePillActive(catId)
      } else {
        this.myFavoriteCategories = [...this.myFavoriteCategories, catId]
      }

      this.updateView()
    },
    updateView() {
      for (const myCat of this.myFavoriteCategories) {
        document.querySelector(`[node-key="${myCat}"]`)
          .classList.add("pill--active")
      }
    },
    removePillActive(nodeId) {
      document.querySelector(`[node-key="${nodeId}"]`).classList.remove("pill--active")
    }
      }))

    
    })

    function formatDate(date) {
      return new Intl.DateTimeFormat("pt-BR", {
        day: "numeric",
        month: "long",
        year: "numeric",
      }).format(new Date(date));
    }
  </script>

</body>

</html>