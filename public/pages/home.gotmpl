<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/assets/styles/pages/home.css">
  {{ template "templates/head.tmpl" }}
  <title>DEVELOPER ACADEMY | HOME</title>
</head>

<body>
  {{template "templates/header.tmpl" .}}
  <main x-data="container" class="container__main">
    <header class="main__header">
      <h1>Desafios</h1>
      <div>
        <div class="header__input">
          <i class="ph ph-magnifying-glass"></i>
          <input placeholder="Search challenges" x-on:change.debounce="onSearch" />
        </div>
        <a href="/new_challenge">
          Novo desafio <i class="ph ph-plus"></i>
        </a>
      </div>
    </header>

    <div class="container__empty_challenges" x-show="filteredChallenges.length <= 0">
      <span>
        Parece que ainda n√£o temos desafios cadastrados. <a href="/new_challenge">Clique aqui</a> para criar um novo.
      </span>
      <i class="ph ph-code"></i>
    </div>
    <ul class="main__list_container">
      <template x-for="challenge in filteredChallenges">
        <li>
          <div class="list_container__content">
            <h3 x-text="challenge.title"></h3>
            <p x-text="challenge.description"></p>
            <time x-text="'Criado em ' + formatDate(new Date(challenge.created_at))"></time>
          </div>
          <footer>
            <a :href="'/challenge/'+challenge.id">visualizar</a>
          </footer>
        </li>
      </template>
    </ul>
  </main>

  {{ template "templates/footer.tmpl" }}

  <script>

    document.addEventListener("alpine:init", () => {
      Alpine.data("container", () => ({
        challenges: {{.challenges}},
      filter: "",
      filteredChallenges: {{.challenges}},
      onSearch(ev) {
      const value = ev.target.value
          
          if(!this.challenges) return

    if (!value.trim()) {
      this.filteredChallenges = this.challenges
      return
    }

    this.filteredChallenges = this.challenges.filter(challenge => this.toUpper(challenge.title).includes(this.toUpper(value)) || this.toUpper(challenge.description).includes(this.toUpper(value)))
        },
    init() {
      this.filteredChallenges = this.challenges
    },
    toUpper(str) {
      return str.toUpperCase()
    }
      }))
    })

    function formatDate(date) {
      return new Intl.DateTimeFormat("pt-BR", {
        day: "numeric",
        month: "long",
        year: "numeric",
      }).format(new Date(date));
    }
  </script>

</body>

</html>